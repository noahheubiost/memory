%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Konvertierung eines Bildes in ein c-header file
% Autor: Lukas Leuenberger
% Date:  20. Dezember 2019
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define some settings
sizeOfImage = [256 256];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Load the image
[Image_filename, Image_path] = uigetfile({'*.bmp';'*.jpg';'*.png';'*.gif'},'Bild öffnen','C:\Daten\Student\');

% Read the file and resize it
img = imread([Image_path Image_filename]);
imgresize = imresize(img, sizeOfImage);

% Convert the image to the RGB565 color space
imgRGB656 = uint16(zeros(sizeOfImage));
imgRGB656(:, :) = uint16(bitand(bitshift(uint16(imgresize(:, :, 1)), -3), 31)) * uint16(2048) + ...
                     uint16(bitand(bitshift(uint16(imgresize(:, :, 2)), -2), 63)) * uint16(32) + ...
                     uint16(bitand(bitshift(uint16(imgresize(:, :, 3)), -3), 31));

%% Check if the file already exists
if (exist(sprintf("%s\\%s.h", pwd, strrep(Image_filename, ".", "_")), 'file') == 2)   
    copyfile(sprintf("%s\\%s.h", pwd, strrep(Image_filename, ".", "_")), sprintf("%s\\%s.h.bak", pwd, strrep(Image_filename, ".", "_")));
end

% Open the Header file to write
fHandleC = fopen(sprintf("%s\\%s.h", pwd, strrep(Image_filename, ".", "_")), 'w+');

% Write Header
fprintf(fHandleC, '/**\r\n');
fprintf(fHandleC, ' ******************************************************************************\r\n');
fprintf(fHandleC, ' * %s.h\r\n', Image_filename);
fprintf(fHandleC, ' * Automatic generated by Matlab Script %s.m\r\n', mfilename);
fprintf(fHandleC, ' * Generated on %s\r\n', datetime('now'));
fprintf(fHandleC, ' * This file contains the image %s\r\n', Image_filename);
fprintf(fHandleC, ' ******************************************************************************\r\n');
fprintf(fHandleC, '**/\r\n'); 
fprintf(fHandleC, '\r\n'); 

% Write include guard
fprintf(fHandleC, '#ifndef _%s_H\r\n', upper(strrep(Image_filename, ".", "_"))); 
fprintf(fHandleC, '#define _%s_H\r\n', upper(strrep(Image_filename, ".", "_"))); 
fprintf(fHandleC, '\r\n'); 

% Add the start of the image
fprintf(fHandleC, 'u8 IMAGE_RGB888_%s[%i][%i][3] = {', strrep(Image_filename, ".", "_"), sizeOfImage(1), sizeOfImage(2)); 

% Loop through all pixels and write the file
for h = 1 : size(imgresize, 1)
    fprintf(fHandleC, "{");
    for v = 1 : size(imgresize, 2)
        fprintf(fHandleC, '{0x%02X,0x%02X,0x%02X}', imgresize(h, v, 1), imgresize(h, v, 2), imgresize(h, v, 3));
        if ~((v == size(imgresize, 2))) 
            fprintf(fHandleC, ',');
        end   
    end
    fprintf(fHandleC, "}");
    if ~((h == size(imgresize, 1))) 
        fprintf(fHandleC, ',\r\n\t');
    end  
end

% Add the end of the image
fprintf(fHandleC, '};\r\n\r\n');

% Add the start of the image
fprintf(fHandleC, 'u16 IMAGE_RGB565_%s[%i][%i] = {', strrep(Image_filename, ".", "_"), sizeOfImage(1), sizeOfImage(2)); 

% Loop through all pixels and write the file
for h = 1 : size(imgresize, 1)
    fprintf(fHandleC, "{");
    for v = 1 : size(imgresize, 2)
        fprintf(fHandleC, '0x%0X', imgRGB656(h, v));
        if ~((v == size(imgresize, 2))) 
            fprintf(fHandleC, ',');
        end   
    end
    fprintf(fHandleC, "}");
    if ~((h == size(imgresize, 1))) 
        fprintf(fHandleC, ',\r\n\t');
    end  
end

% Add the end of the image
fprintf(fHandleC, '};\r\n\r\n');

% Write include guard
fprintf(fHandleC, '#endif // _%s_H\r\n', upper(strrep(Image_filename, ".", "_"))); 
fprintf(fHandleC, '\r\n'); 

% Close the file
fclose(fHandleC);